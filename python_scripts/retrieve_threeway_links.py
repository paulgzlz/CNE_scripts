
# ### Goal
# 
# Retrieve CNE_ids for each set of coordinates in overlap file
# 
# #### Input
# 
# - overlap file (split) generated by calculate_overlaps_split.py
# - Filtered dictionary of CNEs (filtered_cne_dict.txt)
# 
# #### Output
# 
# List of 3-way links in json format: three_way_links.json
# [
# [sp1_cneA, sp2_cneB, sp3_cneC],
# ..
# ..
# [sp1_cneX, sp2_cneY, sp3_cneZ]
# ]
# 
# This list needs to be merged with pairwise_links.json from retrieve_pairwise_links.py
 

import json
from pathlib import Path
import sys

overlap_file = sys.argv[1]
#overlap_file = '../../results_for_paper/cnidaria_final/calculate_overlaps_update/overlap_files/ofav_vs_spis.out_8_overlap_spis_ofav_vs_pdam.out_2.txt'

cne_dict = sys.argv[2]
#cne_dict = '../../results_for_paper/cnidaria_final/filtering/filtered_cne_dict.txt'

#### Create output directory
out_dir = "threeway_links"
Path(out_dir).mkdir(parents=True, exist_ok=True)


# #### Read overlap file
with open(overlap_file) as json_file:
        overlaps = json.load(json_file)


# #### Read CNE dictionary
print("reading dictionary of CNEs")
with open(cne_dict) as json_file:
    all_species_cne_dict = json.load(json_file)


# #### Function that retrieves CNE_ids from each 2-species CNE
# Returns list of list:  
# [[sp1_cne_X, sp2_cne_X], [sp1_cne_X, sp2_cne_X] ... ]
def retrieve_threeway_links_IDs(multi_species_coords):  
    # Create a new output list
    output_list = []
    # retrieve coordinates of CNE for each species
    for species, coords in multi_species_coords.items():
        #print(species)
        start = int(coords.split(":")[0])
        end = int(coords.split(":")[1])
        # retrieve the cne_id that corresponds to the coords from dict of all cne_ids and append to output list
        for cne_id , cne_id_coords in all_species_cne_dict[species].items():
            if (cne_id_coords[0] <= end <= cne_id_coords[1]) or  (start <= cne_id_coords[1] <= end):
                #print("found cne ID")
                output_list.append(cne_id)
    return output_list

threeway_links = []
for cne_id, multi_species_coords in overlaps.items():
    cne_id_list = retrieve_threeway_links_IDs(multi_species_coords)
    if cne_id_list:
        threeway_links.append(retrieve_threeway_links_IDs(multi_species_coords))

#### Write to file
output_path = out_dir + "/" + overlap_file.split("/")[-1] + ".json"
with open(output_path, 'w') as f:
    json.dump(threeway_links, f)


